datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Comment {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  content   String?
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?
  post      Post?    @relation(fields: [postId], references: [id])
  postId    String?
}

model Blog {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Post {
  id            String    @id @default(cuid())
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  title         String?
  content       String?
  publishedDate DateTime?
  user          User?     @relation(fields: [userId], references: [id])
  userId        String?
  category      Category? @relation(fields: [categoryId], references: [id])
  categoryId    String?
  comments      Comment[]
}

model User {
  id        String    @id @default(cuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  firstName String?
  lastName  String?
  username  String    @unique
  email     String?   @unique
  password  String
  roles     Json
  apis      Api[]
  comments  Comment[]
  posts     Post[]
}

model Api {
  id           String         @id @default(cuid())
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  authRequired Boolean?
  name         String?
  endpoint     String?
  method       EnumApiMethod?
  description  String?
  user         User?          @relation(fields: [userId], references: [id])
  userId       String?
}

model Category {
  id          String   @id @default(cuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  name        String?
  description String?
  posts       Post[]
}

enum EnumApiMethod {
  Option1
}
